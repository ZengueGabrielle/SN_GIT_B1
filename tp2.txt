<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="style.css">
    <title>Mon Entreprise</title>
</head>
<body>
    <header>
        <img src="logo.png" alt="Logo de l'entreprise">
        <h1>Slogan de l'entreprise</h1>
        <nav>
            <ul>
                <li><a href="#about">À propos</a></li>
                <li><a href="#services">Services</a></li>
                <li><a href="#contact">Contacts</a></li>
            </ul>
        </nav>
    </header>
    <section id="about">
        <h2>À propos</h2>
        <p>Brève présentation de l'entreprise.</p>
    </section>
    <section id="services">
        <h2>Services</h2>
        <ul>
            <li>Service 1</li>
            <li>Service 2</li>
        </ul>
    </section>
    <footer>
        <p>Contacts</p>
    </footer>
</body>
</html>







body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
}
header {
    background: linear-gradient(to right, #4CAF50, #8BC34A);
    color: white;
    padding: 20px;
    text-align: center;
}
nav ul {
    list-style-type: none;
    padding: 0;
}
nav ul li {
    display: inline;
    margin: 0 15px;
}
section {
    padding: 20px;
    margin: 20px;
}





<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="style.css">
    <title>QCM Développement Web</title>
</head>
<body>
    <form id="qcmForm">
        <div>
            <p>Question 1</p>
            <label><input type="radio" name="q1" value="a"> Réponse A</label>
            <label><input type="radio" name="q1" value="b"> Réponse B</label>
            <label><input type="radio" name="q1" value="c"> Réponse C</label>
        </div>
        <button type="submit">Soumettre</button>
    </form>
    <div id="score"></div>
    <script src="script.js"></script>
</body>
</html>




document.getElementById('qcmForm').addEventListener('submit', function(event) {
    event.preventDefault();
    let score = 0;
    // Vérifie les réponses et calcule le score
    // Affiche le score
});



<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="style.css">
    <title>Puzzle Numérique</title>
</head>
<body>
    <div class="grid">
        <!-- Tuiles générées dynamiquement avec JS -->
    </div>
    <button id="shuffle">Mélanger</button>
    <button id="reset">Réinitialiser</button>
    <script src="script.js"></script>
</body>
</html>


const grid = document.querySelector('.grid');
const shuffleButton = document.getElementById('shuffle');
const resetButton = document.getElementById('reset');

let tiles = [];
let emptyIndex = 8; // Index de la case vide (0 à 8)

function initTiles() {
    tiles = Array.from({ length: 9 }, (_, i) => i + 1);
    tiles[emptyIndex] = ''; // Case vide
    renderTiles();
}

function renderTiles() {
    grid.innerHTML = '';
    tiles.forEach((tile, index) => {
        const tileElement = document.createElement('div');
        tileElement.className = 'tile';
        tileElement.textContent = tile;
        tileElement.dataset.index = index;
        tileElement.addEventListener('click', () => moveTile(index));
        grid.appendChild(tileElement);
    });
}

function moveTile(index) {
    const [row, col] = getRowCol(index);
    const [emptyRow, emptyCol] = getRowCol(emptyIndex);

    // Vérifie si le mouvement est valide (case voisine)
    if ((Math.abs(row - emptyRow) === 1 && col === emptyCol) || 
        (Math.abs(col - emptyCol) === 1 && row === emptyRow)) {
        // Échange les tuiles
        [tiles[index], tiles[emptyIndex]] = [tiles[emptyIndex], tiles[index]];
        emptyIndex = index;
        renderTiles();
        checkWin();
    }
}

function checkWin() {
    if (tiles.join('') === '12345678') {
        setTimeout(() => alert('Bravo ! Vous avez résolu le puzzle !'), 100);
    }
}

function getRowCol(index) {
    return [Math.floor(index / 3), index % 3]; // Retourne [ligne, colonne]
}

function shuffle() {
    for (let i = tiles.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        [tiles[i], tiles[j]] = [tiles[j], tiles[i]];
    }
    emptyIndex = tiles.indexOf('');
    renderTiles();
}

function reset() {
    initTiles();
}

// Événements
shuffleButton.addEventListener('click', shuffle);
resetButton.addEventListener('click', reset);

// Initialiser le jeu
initTiles();



.grid {
    display: grid;
    grid-template-columns: repeat(3, 100px);
    gap: 5px;
}

.tile {
    width: 100px;
    height: 100px;
    background-color: #4CAF50;
    color: white;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 24px;
    cursor: pointer;
}